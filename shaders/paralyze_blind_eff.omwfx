uniform_float uBlurR {
	step = 0.5;
	min = 0.5;
	max = 6;
	default = 1.5;
	display_name = "Blur Radius";
	description = "Blur sampling radius";
	static = false;
}

uniform_float uStrength {
	step = 0.1;
	min = -1;
	max = 1;
	default = 0.8;
	display_name = "LQ Blend Strength";
	description = "Amount Kawase blur is mixed into the scene";
	static = false;
}

fragment downsample(){
	omw_In vec2 omw_TexCoord;
	
	void main()
	{
		vec2 uv = omw_TexCoord.xy*2.0;
		vec2 halfpixel = 0.5/(omw.resolution.xy/2.0);
		vec4 pixelColor = omw_GetLastPass(uv);
		
		vec4 sum = pixelColor*4.0;
		sum += omw_GetLastPass(uv - halfpixel.xy * uBlurR/2);
		sum += omw_GetLastPass(uv + halfpixel.xy * uBlurR/2));
		sum += omw_GetLastPass(uv + vec2(halfpixel.x, -halfpixel.y) * uBlurR/2);
		sum += omw_GetLastPass(uv - vec2(halfpixel.x, -halfpixel.y) * uBlurR/2);

		omw_FragColor = sum/8.0;
	}
}

fragment upsample(){
	omw_In vec2 omw_TexCoord;
	
	void main()
	{
		vec2 uv = omw_TexCoord.xy/2.0;
		vec2 halfpixel = 0.5/(omw.resolution.xy*2.0);
		vec4 pixelColor = omw_GetLastPass(uv);
		
		vec4 sum = omw_GetLastPass(uv + vec2(-halfpixel.x * 2.0, 0.0) * uBlurR/2);	
		sum += omw_GetLastPass(uv + vec2(-halfpixel.x, halfpixel.y) * uBlurR/2)*2.0;
		sum += omw_GetLastPass(uv + vec2(0.0, halfpixel.y * 2.0) * uBlurR/2);
		sum += omw_GetLastPass(uv + vec2(halfpixel.x, halfpixel.y) * uBlurR/2)*2.0;	
		sum += omw_GetLastPass(uv + vec2(halfpixel.x * 2.0, 0.0) * uBlurR/2);
		sum += omw_GetLastPass(uv + vec2(halfpixel.x, -halfpixel.y) * uBlurR/2)*2.0;	
		sum += omw_GetLastPass(uv + vec2(0.0, -halfpixel.y * 2.0) * uBlurR/2);
		sum += omw_GetLastPass(uv + vec2(-halfpixel.x, -halfpixel.y) * uBlurR/2)*2.0;	

		omw_FragColor = sum/12.0;
	}
}

fragment main {
	omw_In vec2 omw_TexCoord;

	void main()
	{
		vec3 scene = omw_GetLastShader(omw_TexCoord).rgb;
		vec3 blur = omw_GetLastPass(omw_TexCoord).rgb;
		
		vec4 col = vec4(mix(scene, blur, uStrength), 1.0);
		omw_FragColor = col;
	}
}

technique {
    passes = downsample, downsample, upsample, upsample, main;
    description = "Blur/Sharpen effect for blind/paralyze magic effect.";
    author = "real_fargoth";
    version = "1.0";
	dynamic = true;
}
